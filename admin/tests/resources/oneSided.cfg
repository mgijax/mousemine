#------------------------------------------------------
# TESTS These tests were previously integration tests

#------------------------------------------------------

[TEST:More than 700000 alleles ]
value:
        700000

mousemine:
        select count(*) as alleles from allele


compare: (x < y)

#------------------------------------------------------

[TEST:More than 250000 authors ]
value:
        250000

mousemine:
        select count(*) as authors from author


compare: (x < y)

#------------------------------------------------------
[TEST:More than 3M crossreferences ]
value:
        3000000

mousemine:
        select count(*) as crossreferences from crossreference


compare: (x < y)

#------------------------------------------------------
[TEST:More than 200 datasources ]
value:
        200

mousemine:
        select count(*) as datasources from datasource


compare: (x < y)

#------------------------------------------------------
[TEST:More than 80000 genes ]
value:
        80000

mousemine:
        select count(*) as genes from gene


compare: (x < y)

#------------------------------------------------------
[TEST:More than 45000 genotypes ]
value:
        45000

mousemine:
        select count(*) as genotypes from genotype


compare: (x < y)

#------------------------------------------------------
[TEST:More than 60000 genotypeallelepairs ]
value:
        60000

mousemine:
        select count(*) as genotypeallelepairs from genotypeallelepair


compare: (x < y)

#------------------------------------------------------
[TEST:More than 230000 goannotations ]
value:
        230000

mousemine:
        select count(*) as goannotations from goannotation


compare: (x < y)

#------------------------------------------------------
[TEST:More than 30000 goterms ]
value:
        30000

mousemine:
        select count(*) as goterms from goterm


compare: (x < y)

#------------------------------------------------------
[TEST:More than 30000 homologues ]
value:
        30000

mousemine:
        select count(*) as homologues from homologue


compare: (x < y)

#------------------------------------------------------
[TEST:More than 80000 locations ]
value:
        80000

mousemine:
        select count(*) as locations from location;


compare: (x < y)

#------------------------------------------------------
[TEST:More than 8200  mpterms ]
value:
        8200

mousemine:
        select count(*) as mpterms from mpterm


compare: (x < y)

#------------------------------------------------------
[TEST:More than 2300  clterms ]
value:
        2300

mousemine:
        select count(*) as clterms from clterm


compare: (x < y)

#------------------------------------------------------
[TEST:More than  430000 ontologyannotations]
value:
        430000

mousemine:
        select count(*) as ontologyannotations from ontologyannotation


compare: (x < y)

#------------------------------------------------------
[TEST:More than 420000 ontologyannotationevidences ]
value:
        420000

mousemine:
        select count(*) as ontologyannotationevidences from ontologyannotationevidence


compare: (x < y)

#------------------------------------------------------
[TEST:More than 700000 ontologyrelations ]
value:
        700000

mousemine:
        select count(*) as ontologyrelations from ontologyrelation


compare: (x < y)

#------------------------------------------------------
[TEST:More than  51000  ontologyterms]
value:
        51000

mousemine:
        select count(*) as ontologyterms from ontologyterm


compare: (x < y)

#------------------------------------------------------
[TEST:More than 90000 ontologytermsynonyms ]
value:
        90000

mousemine:
        select count(*) as ontologytermsynonyms from ontologytermsynonym


compare: (x < y)

#------------------------------------------------------
[TEST:At least 7 organisms]
value: 7
compare: le
mousemine:
        select count(*) as organisms from organism



#------------------------------------------------------
[TEST:One orthologueevidencecode  ]
value:
        1

mousemine:
        select count(*) as orthologueevidencecodes from orthologueevidencecode



#------------------------------------------------------
[TEST:More than 160000  publications ]
value:
        160000

mousemine:
        select count(*) as publications from publication


compare: (x < y)

#------------------------------------------------------
[TEST:More than 1600  soterms ]
value:
        1600

mousemine:
        select count(*) as soterms from soterm


compare: (x < y)

#------------------------------------------------------
[TEST:More than 25000  strains ]
value:
        25000

mousemine:
        select count(*) as strains from strain


compare: (x < y)

#------------------------------------------------------
[TEST:More than 1350000 synonyms ]
value:
        1350000

mousemine:
        select count(*) as synonyms from synonym


compare: (x < y)

#------------------------------------------------------
[TEST:More than 6000 transgenes]
value:
        6000

mousemine:
        select count(*) as transgenes from transgene


compare: (x < y)

#------------------------------------------------------
[TEST:No Results : Ensure every mouse feature has primary id that is an MGI number ]
value:
        0

mousemine:
        select count(s.primaryidentifier) as none 
	from sequencefeature s, organism o , dataset d, bioentitiesdatasets bd 
	where s.organismid = o.id 
	and o.taxonid = 10090 
	and s.primaryidentifier not like 'MGI:%%' 
	and s.class not in ('org.intermine.model.bio.IntergenicRegion','org.intermine.model.bio.Chromosome') 
	and s.id = bd.bioentities 
	and bd.datasets = d.id 
	and d.name = 'Mouse Gene Catalog from MGI'
		
#------------------------------------------------------
[TEST:No Results : Every SequenceFeature has a SOTerm]
value:
	0

mousemine:
	select count(*) 
	from sequencefeature
	where sequenceontologytermid is null

#------------------------------------------------------
[TEST:No Results : All fields of all organisms should be populated  ]
# temporarily disabled b.c. drosophila suddenly has a null common name field and I don't know why
enabled: false
value:
        0

mousemine:
        select count(*) as none
	from organism
	where commonname is null
	or genus is null
	or species is null
	or shortname is null
	or name is null
	or taxonid is null

#------------------------------------------------------
[TEST:No Results : Every gene should have a unique identifier ]
enabled: false
value:
        0

mousemine:
        select count(gene1.primaryidentifier) as none
	from gene gene1, gene gene2
	where gene1.primaryidentifier = gene2.primaryidentifier
	and gene1.id <> gene2.id

#------------------------------------------------------
[TEST:No Results : Every gene record should have a primary identifier ]
value:
        0

mousemine:
        select count(*) as none from gene where primaryidentifier is null

#------------------------------------------------------
[TEST: Isoforms are associated with the same genes as their canonical forms]
value:
      0

mousemine:
    select count(p.*)
    from protein p, genesproteins gpCan, gene g where p.canonicalproteinid = gpCan.proteins and g.id = gpCan.genes
    and p.id not in (select proteins from genesproteins gpIso where gpIso.genes = gpCan.genes);

#------------------------------------------------------
[TEST: Q62151-1 is associated only with the canonical form]
value:
    1
mousemine:
    select count(*)
    from protein p, synonym s
    where p.id = s.subjectid
    and s.intermine_value = 'Q62151-1'

#------------------------------------------------------
[TEST: Isoform id of canonical form is only associated with that isoform]
# test a specific case
value:
    1
mousemine:
    select count(*)
    from protein p, synonym s
    where p.id = s.subjectid
    and s.intermine_value = 'Q62151-1'

#------------------------------------------------------
[TEST: Isoform synonyms are picked up and loaded]
# test a specific case
value:
    1
mousemine:
    select count(*)
    from protein p, synonym s
    where p.id = s.subjectid
    and s.intermine_value = 'mRAGE_v3'

#------------------------------------------------------ 
[TEST: Every SO term should have a name]
value:
        0

mousemine:
        select count (*) from soterm where name is null

#------------------------------------------------------ 
# The following test ought not to be necessary, but merging errors due to incorrect key
# declarations can result in a corrupt state wherein: the ontology term id in some ontology
# annotations is invalid. The correct ontology term does exist, but has a different key.
# The key in the annotation record is not even in the intermineobject table.
[TEST: The term id in every ontology annotation must exist in ontology term.]
value:
        0

mousemine:
        select count(*) from ontologyannotation where ontologytermid  not in (select id from ontologyterm)


